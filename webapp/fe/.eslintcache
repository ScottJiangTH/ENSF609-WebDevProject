[{"/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/NewForm.js":"1","/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/FinalGrade.js":"2","/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/Preview.js":"3","/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/CourseInfo.js":"4","/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/LearningOutcome.js":"5","/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/index.js":"6","/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/Connect.js":"7"},{"size":3218,"mtime":1610922082381,"results":"8","hashOfConfig":"9"},{"size":29324,"mtime":1610953914473,"results":"10","hashOfConfig":"9"},{"size":10814,"mtime":1610942272155,"results":"11","hashOfConfig":"9"},{"size":7368,"mtime":1610944922921,"results":"12","hashOfConfig":"9"},{"size":35521,"mtime":1610947090837,"results":"13","hashOfConfig":"9"},{"size":1721,"mtime":1610942553083,"results":"14","hashOfConfig":"9"},{"size":759,"mtime":1610946560038,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u0q55n",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/NewForm.js",[],"/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/FinalGrade.js",["32"],"/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/Preview.js",["33"],"/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/CourseInfo.js",["34"],"import 'bulma/css/bulma.css';\nimport React from 'react'\nimport Connect from './Connect';\nimport { Link, Redirect } from 'react-router-dom';\n\n\nconst options = [\n  { label: \"1\", value: 1 }, { label: \"2\", value: 2 }, { label: \"3\", value: 3 },\n  { label: \"4\", value: 4 }, { label: \"5\", value: 5 }, { label: \"6\", value: 6 }\n];\n\nconst connect = new Connect();\nvar initialState = {\n  course: {\n    courseNumber: \"\",\n    courseName: \"\",\n    courseDescription: \"\",\n    academicCredit: 3,\n    lectureHours: 3,\n    labHours: 2,\n    refUrl: \"\"\n  }\n};\n\nexport default class CourseInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleSave.bind(this);\n  }\n\n  state = {\n    course: {\n      courseNumber: \"\",\n      courseName: \"\",\n      courseDescription: \"\",\n      academicCredit: 3,\n      lectureHours: 3,\n      labHours: 2,\n      refUrl: \"\"\n    }\n  }\n\n  componentDidMount() {\n    var self = this;\n\n    connect.getCourse(this.props.match.params.courseNumber).then((response) => {\n      console.log(response);\n      self.setState({ ...this.state, course: response });\n    });\n  }\n\n  handleSave(event) {\n    if (this.state === initialState) {\n      alert('No changes to be saved');\n    } else {\n      connect.updateCourse(this.state.course);\n      initialState = this.state;\n      alert(this.state.course.courseName + ' saved. Please proceed to next section.');\n    }\n  }\n  handleClear(event) {\n    var self = this;\n    connect.getCourse(this.props.match.params.courseNumber).then((response) => {\n      console.log(response);\n      self.setState({ ...this.state, course: response });\n    });\n    alert('All fields cleared.');\n  }\n  updateCourseNum(event) {\n    this.setState({\n      ...this.state, course: {\n        ...this.state.course,\n        courseNumber: event.target.value\n      }\n    });\n  }\n  updateCourseName(event) {\n    this.setState({\n      ...this.state, course: {\n        ...this.state.course,\n        courseName: event.target.value\n      }\n    });\n  }\n  updateDescription(event) {\n    this.setState({\n      ...this.state, course: {\n        ...this.state.course,\n        courseDescription: event.target.value\n      }\n    });\n  }\n  updateCredit(event) {\n    this.setState({\n      ...this.state, course: {\n        ...this.state.course,\n        academicCredit: Number(event.target.value)\n      }\n    });\n  }\n  updateLecture(event) {\n    this.setState({\n      ...this.state, course: {\n        ...this.state.course, lectureHours: Number(event.target.value)\n      }\n    });\n  }\n  updateLab(event) {\n    this.setState({\n      ...this.state, course: {\n        ...this.state.course, labHours: Number(event.target.value)\n      }\n    });\n  }\n  updateURL(event) {\n    this.setState({\n      ...this.state, course: {\n        ...this.state.course, refUrl: event.target.value\n      }\n    });\n  }\n  render() {\n    return (\n\n      <html>\n        <section class=\"hero is-dark has-bg-img\">\n          <div class=\"hero-body\">\n            <div class='columns'>\n              <div class='column'>\n                <img is-bg-img alt=\"logo\"\n                  src=\"https://upload.wikimedia.org/wikipedia/en/3/3f/Schulich.png\"></img>\n              </div>\n              <div class='column has-text-right'>\n                <h1 class=\"title is-1\">Course Outline Builder</h1>\n                <h3 class=\"title is-3\">Calendar Information</h3>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section class='section m-6'>\n          <div class=\"control\">\n            <label class=\"label\">Course Number</label>\n            <input class=\"input\" type=\"text\" disabled placeholder=\"e.g. ENSF 409\"\n              value={this.state.course.courseNumber}\n              onChange={evt => this.updateCourseNum(evt)}></input>\n          </div>\n          <div class=\"control\">\n            <label class=\"label\">Course Name</label>\n            <input class=\"input\" type=\"text\" disabled\n              placeholder=\"e.g. Principles of Software Development\"\n              value={this.state.course.courseName}\n              onChange={evt => this.updateCourseName(evt)}></input>\n          </div>\n          <div class=\"control\">\n            <label class=\"label\">Course Description</label>\n            <textarea class=\"textarea\"\n              placeholder=\"A brief Description of the Course\"\n              value={this.state.course.courseDescription}\n              onChange={evt => this.updateDescription(evt)}></textarea>\n          </div>\n          <div class=\"control\">\n            <label class=\"label\">Academic Credit</label>\n            <div class=\"select is-small\">\n              <select value={this.state.course.courseCredit}\n                onChange={evt => this.updateCredit(evt)}>\n                {options.map((option) => (\n                  <option value={option.value}>{option.label}</option>))}\n              </select>\n            </div>\n          </div>\n          <div class=\"control\">\n            <label class=\"label\">Course Hours</label>\n            <div class='columns'>\n              <div class='column'>\n                {this.state.course.academicCredit + ' unit; H (' +\n                  this.state.course.lectureHours + '-' +\n                  this.state.course.labHours + ')'}\n              </div>\n              <div class='column has-text-right'><label class=\"label-6\">Lecture Hours</label></div>\n              <div class='column'>\n                <div class=\"select is-small\">\n                  <select value={this.state.course.lectureHours}\n                    onChange={evt => this.updateLecture(evt)}>\n                    {options.map((option) => (\n                      <option value={option.value}>{option.label}</option>))}\n                  </select>\n                </div>\n              </div>\n              <div class='column has-text-right'><label class=\"label-6\">Lab Hours</label></div>\n              <div class='column'>\n                <div class=\"select is-small\">\n                  <select value={this.state.course.labHours}\n                    onChange={evt => this.updateLab(evt)}>\n                    {options.map((option) => (\n                      <option value={option.value}>{option.label}</option>))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"control\">\n            <label class=\"label\">Calendar Reference</label>\n            <input class=\"input\" type=\"text\"\n              placeholder=\"e.g. http://www.ucalgary.ca/pubs/calendar/current/software-engineering-for-engineers.html#38252\"\n              value={this.state.course.refUrl}\n              onChange={evt => this.updateURL(evt)}></input>\n          </div>\n        </section>\n        <section class='columns m-6'>\n          <div class='column'></div>\n          <div class='column'>\n            <button class='button is-link' onClick={evt => this.handleSave(evt)} >Save Changes</button>\n          </div>\n          <div class='column'>\n            <button class='button is-link' onClick={evt => this.handleClear(evt)}>Clear Content</button>\n          </div>\n          <div class='column'>\n            <Link to={`/prof/form/learningoutcome/${this.state.course.courseNumber}`}>\n              <button class='button is-link'> Next Section </button>\n            </Link>\n          </div>\n          <div class='column'></div>\n        </section>\n      </html>\n    );\n  }\n}","/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/LearningOutcome.js",["35","36","37"],"/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/index.js",["38","39"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport CourseInfo from './CourseInfo';\nimport LearningOutcome from './LearningOutcome';\nimport FinalGrade from './FinalGrade';\nimport reportWebVitals from './reportWebVitals';\nimport CredentialBar from './CredentialsBar';\nimport ProfFormBar from './ProfFormBar';\nimport ProfPage from './ProfPage'\nimport Welcome from './Welcome';\nimport PageNotFound from './PageNotFound';\nimport NewForm from './NewForm';\nimport ExistingForm from './ExistingForm';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Preview from './Preview';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <div className= 'index'>\n        <CredentialBar />\n          <Route path=\"/\" exact component={Welcome}/>\n          <Route path=\"/prof\" exact component={ProfPage}/>\n          <Route path=\"/admin\" component={PageNotFound} />\n          <Route path= \"/prof/new\" component={NewForm}/>\n          <Route path=\"/prof/existing\" component={ExistingForm}/>\n          <Route path=\"/prof/form/courseinfo/:courseNumber\" component = {CourseInfo}/> \n          <Route path=\"/prof/form/learningoutcome/:courseNumber\" component = {LearningOutcome}/> \n          <Route path=\"/prof/form/finalgrade/:courseNumber\" component = {FinalGrade}/>\n          <Route path=\"/prof/preview/:courseNumber\" component = {Preview}/>\n\n      </div>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/thomaszhao/Dev/ENSF609-WebDevProject/webapp/fe/src/Connect.js",[],{"ruleId":"40","severity":1,"message":"41","line":31,"column":5,"nodeType":"42","messageId":"43","endLine":34,"endColumn":6},{"ruleId":"44","severity":1,"message":"45","line":4,"column":10,"nodeType":"46","messageId":"47","endLine":4,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":4,"column":16,"nodeType":"46","messageId":"47","endLine":4,"endColumn":24},{"ruleId":"44","severity":1,"message":"48","line":4,"column":16,"nodeType":"46","messageId":"47","endLine":4,"endColumn":24},{"ruleId":"40","severity":1,"message":"41","line":44,"column":5,"nodeType":"42","messageId":"43","endLine":47,"endColumn":6},{"ruleId":"44","severity":1,"message":"49","line":273,"column":21,"nodeType":"46","messageId":"47","endLine":273,"endColumn":24},{"ruleId":"44","severity":1,"message":"50","line":9,"column":8,"nodeType":"46","messageId":"47","endLine":9,"endColumn":19},{"ruleId":"44","severity":1,"message":"51","line":15,"column":35,"nodeType":"46","messageId":"47","endLine":15,"endColumn":41},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'oid' is assigned a value but never used.","'ProfFormBar' is defined but never used.","'Switch' is defined but never used."]