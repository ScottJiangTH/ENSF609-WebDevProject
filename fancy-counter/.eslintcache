[{"/Users/scottj/Library/Mobile Documents/com~apple~CloudDocs/UofC/ENSF-609-610/ENSF609-WebDevProject/fancy-counter/src/reportWebVitals.js":"1","/Users/scottj/Library/Mobile Documents/com~apple~CloudDocs/UofC/ENSF-609-610/ENSF609-WebDevProject/fancy-counter/src/index.js":"2","/Users/scottj/Library/Mobile Documents/com~apple~CloudDocs/UofC/ENSF-609-610/ENSF609-WebDevProject/fancy-counter/src/App.js":"3"},{"size":362,"mtime":1607715549979,"results":"4","hashOfConfig":"5"},{"size":500,"mtime":1607715549978,"results":"6","hashOfConfig":"5"},{"size":2298,"mtime":1608059367992,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"na99ua",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"13"},"/Users/scottj/Library/Mobile Documents/com~apple~CloudDocs/UofC/ENSF-609-610/ENSF609-WebDevProject/fancy-counter/src/reportWebVitals.js",[],["17","18"],"/Users/scottj/Library/Mobile Documents/com~apple~CloudDocs/UofC/ENSF-609-610/ENSF609-WebDevProject/fancy-counter/src/index.js",[],["19","20"],"/Users/scottj/Library/Mobile Documents/com~apple~CloudDocs/UofC/ENSF-609-610/ENSF609-WebDevProject/fancy-counter/src/App.js",["21"],"import 'bulma/css/bulma.css';\nimport { useReducer, useState } from 'react';\n\nfunction App() {\n\n  // const [counter, setCounter] = useState(0);\n\n  const myReducer = (state, action) => {\n    if(isNaN(action.value)) return 0;\n    return action.value > 1000 ? 1000 : action.value < 0 ? 0 : action.value;\n  };\n\n  const [counter, dispatch] = useReducer(myReducer, 0);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const decrement = () => {\n    dispatch({ value : counter - 1 });\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      dispatch({value: parseInt(inputValue)});\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"columns is-multline\">\n          <div className=\"column is-full\">\n            <div className=\"notification\">\n              <div className=\"columns\">\n                <div className=\"column is-half\">\n                  <div className=\"field has-addons\">\n                    <div className=\"control\">\n                      <input\n                       className=\"input\"\n                       type=\"text\"\n                       placeholder=\"Put a number\"\n                       value={inputValue}\n                       onChange={(e) => setInputValue(e.target.value)}\n                       onKeyDown={handleKeyDown}\n                       />\n                    </div>\n                    <div className=\"control\">\n                      <a className=\"button is-info\"\n                       onClick={() => \n                        dispatch( { value: parseInt(inputValue) })\n                       }>Assign</a>\n                    </div>\n                </div>\n                <div className=\"buttons has-addons\">\n                  <button className=\"button is-primary\"\n                    onClick={() => dispatch({ value: counter + 1 })\n                    }>Up</button>\n                  <button className=\"button is warning\" onClick={decrement}>\n                      Down\n                  </button>\n                </div>\n              </div>\n              <div className=\"column is-half has-text-centered\">\n                <h1 className=\"title\">{counter}</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"22","replacedBy":"26"},{"ruleId":"24","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":46,"column":23,"nodeType":"30","endLine":49,"endColumn":26},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],["31"],["32"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]